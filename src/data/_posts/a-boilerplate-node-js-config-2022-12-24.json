{
  "layout": "blog",
  "language": "en",
  "date": "2022-12-25T06:29:12.597Z",
  "title": "A boilerplate Node.js config",
  "body": "Here is a simple boilerplate config when using Node.js with Typescript using ES-modules.\n\n**package.json**\n\n```\n{\n  \"main\": \"index.ts\",\n  \"type\": \"module\",\n  \"scripts\": {\n  },\n  \"dependencies\": {\n    \"cors\": \"^2.8.5\",\n    \"dotenv\": \"^16.0.3\",\n    \"express\": \"^4.18.2\",\n    \"nodemon\": \"^2.0.20\"\n  },\n  \"devDependencies\": {\n    \"@types/cors\": \"^2.8.13\",\n    \"@types/express\": \"^4.17.15\",\n    \"ts-node\": \"^10.9.1\"\n  }\n}\n\n```\n\n*As TypeScript is integrated with my VS Code IDE, there is no need to add it as a devDependency, but you should if you do not have it installed at all.*\n\n**tsconfig.json**\n\n```\n{\n  \"compilerOptions\": {\n    \"target\": \"ESNext\",\n    \"module\": \"ESNext\",\n    \"rootDir\": \"./src\",\n    \"moduleResolution\": \"NodeNext\",\n    \"baseUrl\": \"./\",\n    \"outDir\": \"./dist\",\n    \"allowSyntheticDefaultImports\": true,\n    \"esModuleInterop\": true,\n    \"forceConsistentCasingInFileNames\": true,\n    \"strict\": true,\n    \"strictNullChecks\": true,\n    \"alwaysStrict\": true,\n    \"noImplicitReturns\": true,\n    \"skipLibCheck\": true\n  },\n  \"include\": [\"./src/**/*.ts\"],\n  \"exclude\": [\"node_modules\"],\n  \n  // only if using ts-node\n  \"ts-node\": {\n    \"esm\": true\n  }\n}\n```\n\nTo use ts-node, one needs to execute the following command in your IDE's terminal:\n\n```\nnpx ts-node /path/to/your/file/index.ts\n```\n\n*Another option is to add the command as a package.json script with a shorter script name for easier execution. Yet another option is to add it to a nodemon script, or as a --watch option, to have Node.js restart it on every save.*"
}